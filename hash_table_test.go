package mpq

import "testing"

func TestHashTable(t *testing.T) {
	setup()

	testEntries := []HashTableEntry{
		{0xAAC2A54B, 0xF4762B95, 0x0000, 0x0000, 0x00000003},
		{0xC1F84209, 0x41580DCA, 0x0000, 0x0000, 0x0000000B},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xC9E5B770, 0x3B18F6B6, 0x0000, 0x0000, 0x00000006},
		{0x343C087B, 0x278E3682, 0x0000, 0x0000, 0x00000005},
		{0x3B2B1EA0, 0xB72EF057, 0x0000, 0x0000, 0x00000009},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xD383C29C, 0xEF402E92, 0x0000, 0x0000, 0x00000000},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0x764499DD, 0x6B1B61B0, 0x0000, 0x0000, 0x00000002},
		{0xD38437CB, 0x07DFEAEC, 0x0000, 0x0000, 0x0000000D},
		{0x2E74D7E1, 0x8B271E10, 0x0000, 0x0000, 0x00000007},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xFE19CB9E, 0x6240705D, 0x0000, 0x0000, 0x00000008},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0x5A7E8BDC, 0xFF253F5C, 0x0000, 0x0000, 0x00000001},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xFD657910, 0x4E9B98A7, 0x0000, 0x0000, 0x0000000C},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFF, 0xFFFF, 0xFFFFFFFF},
		{0x1DA8B0CF, 0xA2CEFF28, 0x0000, 0x0000, 0x0000000A},
		{0x31952289, 0x6A5FFAA3, 0x0000, 0x0000, 0x00000004},
	}

	entries := m.HashTable.Entries()
	if len(entries) != len(testEntries) {
		t.Error("Size mismatch:", len(entries))
	}

	for i, test := range testEntries {
		if entries[i].Name1 != test.Name1 {
			t.Errorf("%d> Name1 wrong: %02X", i, entries[i].Name1)
		}
		if entries[i].Name2 != test.Name2 {
			t.Errorf("%d> Name2 wrong: %02X", i, entries[i].Name2)
		}
		if entries[i].Locale != test.Locale {
			t.Errorf("%d> Locale wrong: %02X", i, entries[i].Locale)
		}
		if entries[i].Platform != test.Platform {
			t.Errorf("%d> Platform wrong: %02X", i, entries[i].Platform)
		}
		if entries[i].BlockIndex != test.BlockIndex {
			t.Errorf("%d> BlockIndex wrong: %02X", i, entries[i].BlockIndex)
		}
	}

}
